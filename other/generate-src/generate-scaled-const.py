# SPDX-FileCopyrightText: Steven Ward
# SPDX-License-Identifier: OSL-3.0

# pylint: disable=invalid-name
# pylint: disable=no-member

"""
Usage:
python3 generate-scaled-const.py > scaled-const.h
"""

__author__ = 'Steven Ward'
__license__ = 'OSL-3.0'

import datetime as dt
import os.path
import platform

import gmpy2

# https://gmpy2.readthedocs.io/en/latest/mpfr.html
# https://gmpy2.readthedocs.io/en/latest/mpz.html

# This context has round=RoundToNearest
gmpy2.set_context(gmpy2.ieee(256))

floor = gmpy2.floor
frac = gmpy2.frac
sqrt = gmpy2.sqrt

now = dt.datetime.now(dt.timezone.utc)
brief_description = 'scaled constants'
generated_by_file_name = os.path.basename(__file__)
generated_datetime = now.isoformat(timespec='seconds')
system_info = platform.platform()

print(fr'''// SPDX-FileCopyrightText: {__author__}
// SPDX-License-Identifier: {__license__}

/// {brief_description}
/**
* \file
* \author {__author__}
* \sa https://oeis.org/A000040
*/

// Generated by "{generated_by_file_name}" on {generated_datetime}
// system information: {system_info}

#pragma once

#include <stdint.h>
''')

# https://oeis.org/A000040
primes = (
    2,
    3,
    5,
    7,
    11,
    13,
    17,
    19,
    23,
    29,
    31,
    37,
    41,
    43,
    47,
    53,
    59,
    61,
    67,
    71,
    73,
    79,
    83,
    89,
    97,
    101,
    103,
    107,
    109,
    113,
    127,
    131,
    137,
    139,
    149,
    151,
    157,
    163,
    167,
    173,
    179,
    181,
    191,
    193,
    197,
    199,
    211,
    223,
    227,
    229,
    233,
    239,
    241,
    251,
    257,
    263,
    269,
    271,
)

scale = gmpy2.mpz(2**64)

print('// ⌊2⁶⁴ × frac(√p)⌋')
for p in primes:
    x = frac(sqrt(p))
    result = int(floor(scale * frac(sqrt(x))))
    print(f"#define FLOOR_SCALED_FRAC_SQRT_{p:<3} UINT64_C(0x{result:016x})")
