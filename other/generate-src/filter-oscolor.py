# SPDX-FileCopyrightText: Steven Ward
# SPDX-License-Identifier: OSL-3.0

# pylint: disable=invalid-name

'''
Filter the colors from https://github.com/freedesktop/xorg-xserver/blob/master/os/oscolor.c
and print them as a Python dict.
'''

__author__ = 'Steven Ward'
__license__ = 'OSL-3.0'

import datetime as dt
import os.path
import platform
import re
import sys

now = dt.datetime.now(dt.timezone.utc)
brief_description = 'X11 color names and numbers'
generated_by_file_name = os.path.basename(__file__)
generated_datetime = now.isoformat(timespec='seconds')
system_info = platform.platform()

print(fr'''# SPDX-FileCopyrightText: {__author__}
# SPDX-License-Identifier: {__license__}

"""
{brief_description}
"""

# Generated by "{generated_by_file_name}" on {generated_datetime}
# system information: {system_info}
''')

color_pattern = re.compile(r'\s*{(?P<red>\d+),'
                           r'\s*(?P<green>\d+),'
                           r'\s*(?P<blue>\d+),'
                           r'\s*\d+},' # ignore
                           r'\s*/\*'
                           r'\s*(?P<name>[^*]+?)' # the name is in a C comment
                           r'\s*\*/\s*',
                           re.ASCII)
grey_pattern = re.compile('grey', re.ASCII | re.IGNORECASE)

print("name_to_rgb = {")
for line in sys.stdin:
    match = color_pattern.fullmatch(line)
    if match:
        red = match.group('red')
        green = match.group('green')
        blue = match.group('blue')
        name = match.group('name')
        if not grey_pattern.search(name):
            print(f'    \"{name}\" : ({red}, {green}, {blue}),')
print("}")

print()
print("num_to_rgb = {")

# Color
vals = [0] + list(range(95, 255+1, 40))
i = 16
for r in vals:
    for g in vals:
        for b in vals:
            print(f"    {i:3} : ({r:3}, {g:3}, {b:3}),")
            i += 1

# Gray
vals = list(range(8, 255 - 18, 10))
i = 255+1 - 24
for x in vals:
    print(f"    {i:3} : ({x:3}, {x:3}, {x:3}),")
    i += 1

print("}")
