#!/usr/bin/bash
# SPDX-FileCopyrightText: Steven Ward
# SPDX-License-Identifier: OSL-3.0

declare -r WEATHER_JSON="$XDG_RUNTIME_DIR"/weather.json

update-weather || exit

mapfile -t WEATHER_FIELDS < <(jq -r '
.weather[0].main,
.weather[0].description,
.main.temp,
.main.feels_like,
.main.pressure,
.main.humidity,
.main.temp_min,
.main.temp_max,
.wind.speed,
.wind.deg,
.clouds.all,
.dt,
.sys.sunrise,
.sys.sunset' < "$WEATHER_JSON")

MAIN="${WEATHER_FIELDS[0]}"
DESCRIPTION="${WEATHER_FIELDS[1]}"
TEMP="${WEATHER_FIELDS[2]}"
FEELS_LIKE="${WEATHER_FIELDS[3]}"
PRESSURE="${WEATHER_FIELDS[4]}"
HUMIDITY="${WEATHER_FIELDS[5]}"
TEMP_MIN="${WEATHER_FIELDS[6]}"
TEMP_MAX="${WEATHER_FIELDS[7]}"
WIND_SPEED="${WEATHER_FIELDS[8]}"
WIND_DIR="${WEATHER_FIELDS[9]}"
CLOUDINESS="${WEATHER_FIELDS[10]}"
DT="${WEATHER_FIELDS[11]}"
SUNRISE="${WEATHER_FIELDS[12]}"
SUNSET="${WEATHER_FIELDS[13]}"

# https://www.weather.gov/pqr/wind
declare -r MIN_WIND_SPEED='3.5'

if (( $(bc -q <<< "$WIND_SPEED >= $MIN_WIND_SPEED") == 1 ))
then
	if command -v wind-dir > /dev/null
	then
		WIND_DIR="$(wind-dir <<< "$WIND_DIR")" || exit
	else
		WIND_DIR+='°'
	fi
else
	WIND_DIR=''
fi

[[ -n "$MAIN" && -n "$DESCRIPTION"  ]] && printf '%s (%s)' "$MAIN" "$DESCRIPTION"
[[ -n "$TEMP"                       ]] && printf '  %.0f°F' "$TEMP"
[[ -n "$FEELS_LIKE"                 ]] && printf ' (feels like %.0f°F)' "$FEELS_LIKE"
[[ -n "$TEMP_MIN" && -n "$TEMP_MAX" ]] && printf ' [%.0f°F, %.0f°F]' "$TEMP_MIN" "$TEMP_MAX"
[[ -n "$HUMIDITY"                   ]] && printf '  %d%% humid' "$HUMIDITY"
[[ -n "$WIND_SPEED"                 ]] && printf '  %.0f mph' "$WIND_SPEED"
[[ -n "$WIND_DIR"                   ]] && printf ' %s' "$WIND_DIR"
[[ -n "$CLOUDINESS"                 ]] && printf '  %d%% cloudy' "$CLOUDINESS"
[[ -n "$PRESSURE"                   ]] && printf '  %d hPa' "$PRESSURE"
[[ -n "$SUNRISE"                    ]] && printf '  %(%H:%M)T▵̲' "$SUNRISE"
[[ -n "$SUNSET"                     ]] && printf ' %(%H:%M)T▿̲' "$SUNSET"
[[ -n "$DT"                         ]] && printf '  (%(%FT%T)T)' "$DT"
printf '\n'
