// SPDX-FileCopyrightText: Steven Ward
// SPDX-License-Identifier: OSL-3.0

/// ascii strings
/**
\file
\author Steven Ward
\sa https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap07.html#tag_07_03_01
\sa https://en.cppreference.com/w/cpp/string/byte
\sa https://docs.python.org/3/library/string.html
*/

// Generated by "generate-ascii.py" on 2025-04-25T15:19:16+00:00
// system information: Linux-6.14.3-arch1-1-x86_64-with-glibc2.41

#pragma once

#include <array>
#include <string>
#include <string_view>

inline constexpr std::string_view ascii_all_sv              {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 128};
inline constexpr std::string_view ascii_uppercase_sv        {"ABCDEFGHIJKLMNOPQRSTUVWXYZ", 26};
inline constexpr std::string_view ascii_lowercase_sv        {"abcdefghijklmnopqrstuvwxyz", 26};
inline constexpr std::string_view ascii_alphabetical_sv     {"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", 52};
inline constexpr std::string_view ascii_decimal_sv          {"0123456789", 10};
inline constexpr std::string_view ascii_alphanumeric_sv     {"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", 62};
inline constexpr std::string_view ascii_word_sv             {"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz", 63};
inline constexpr std::string_view ascii_hexadecimal_sv      {"0123456789ABCDEFabcdef", 22};
inline constexpr std::string_view ascii_octal_sv            {"01234567", 8};
inline constexpr std::string_view ascii_binary_sv           {"01", 2};
inline constexpr std::string_view ascii_whitespace_sv       {"\t\n\v\f\r ", 6};
inline constexpr std::string_view ascii_blank_sv            {"\t ", 2};
inline constexpr std::string_view ascii_visible_sv          {"!\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 94};
inline constexpr std::string_view ascii_printable_sv        {" !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 95};
inline constexpr std::string_view ascii_control_sv          {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F\x7F", 33};
inline constexpr std::string_view ascii_punctuation_sv      {"!\"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~", 32};
inline constexpr std::string_view ascii_non_uppercase_sv    {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./0123456789:;<=>?@[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 102};
inline constexpr std::string_view ascii_non_lowercase_sv    {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`{|}~\x7F", 102};
inline constexpr std::string_view ascii_non_alphabetical_sv {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./0123456789:;<=>?@[\\]^_`{|}~\x7F", 76};
inline constexpr std::string_view ascii_non_decimal_sv      {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 118};
inline constexpr std::string_view ascii_non_alphanumeric_sv {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~\x7F", 66};
inline constexpr std::string_view ascii_non_word_sv         {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./:;<=>?@[\\]^`{|}~\x7F", 65};
inline constexpr std::string_view ascii_non_hexadecimal_sv  {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~\x7F", 106};
inline constexpr std::string_view ascii_non_octal_sv        {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./89:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 120};
inline constexpr std::string_view ascii_non_binary_sv       {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./23456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 126};
inline constexpr std::string_view ascii_non_whitespace_sv   {"\x00\x01\x02\x03\x04\x05\x06\a\b\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F!\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 122};
inline constexpr std::string_view ascii_non_blank_sv        {"\x00\x01\x02\x03\x04\x05\x06\a\b\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F!\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 126};
inline constexpr std::string_view ascii_non_visible_sv      {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F \x7F", 34};
inline constexpr std::string_view ascii_non_printable_sv    {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F\x7F", 33};
inline constexpr std::string_view ascii_non_control_sv      {" !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 95};
inline constexpr std::string_view ascii_non_punctuation_sv  {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\x7F", 96};

const std::string ascii_all_s              {ascii_all_sv             };
const std::string ascii_uppercase_s        {ascii_uppercase_sv       };
const std::string ascii_lowercase_s        {ascii_lowercase_sv       };
const std::string ascii_alphabetical_s     {ascii_alphabetical_sv    };
const std::string ascii_decimal_s          {ascii_decimal_sv         };
const std::string ascii_alphanumeric_s     {ascii_alphanumeric_sv    };
const std::string ascii_word_s             {ascii_word_sv            };
const std::string ascii_hexadecimal_s      {ascii_hexadecimal_sv     };
const std::string ascii_octal_s            {ascii_octal_sv           };
const std::string ascii_binary_s           {ascii_binary_sv          };
const std::string ascii_whitespace_s       {ascii_whitespace_sv      };
const std::string ascii_blank_s            {ascii_blank_sv           };
const std::string ascii_visible_s          {ascii_visible_sv         };
const std::string ascii_printable_s        {ascii_printable_sv       };
const std::string ascii_control_s          {ascii_control_sv         };
const std::string ascii_punctuation_s      {ascii_punctuation_sv     };
const std::string ascii_non_uppercase_s    {ascii_non_uppercase_sv   };
const std::string ascii_non_lowercase_s    {ascii_non_lowercase_sv   };
const std::string ascii_non_alphabetical_s {ascii_non_alphabetical_sv};
const std::string ascii_non_decimal_s      {ascii_non_decimal_sv     };
const std::string ascii_non_alphanumeric_s {ascii_non_alphanumeric_sv};
const std::string ascii_non_word_s         {ascii_non_word_sv        };
const std::string ascii_non_hexadecimal_s  {ascii_non_hexadecimal_sv };
const std::string ascii_non_octal_s        {ascii_non_octal_sv       };
const std::string ascii_non_binary_s       {ascii_non_binary_sv      };
const std::string ascii_non_whitespace_s   {ascii_non_whitespace_sv  };
const std::string ascii_non_blank_s        {ascii_non_blank_sv       };
const std::string ascii_non_visible_s      {ascii_non_visible_sv     };
const std::string ascii_non_printable_s    {ascii_non_printable_sv   };
const std::string ascii_non_control_s      {ascii_non_control_sv     };
const std::string ascii_non_punctuation_s  {ascii_non_punctuation_sv };

/**
\sa https://en.cppreference.com/w/c/language/escape
\sa https://en.cppreference.com/w/cpp/language/escape
\sa https://eel.is/c++draft/lex.ccon#:simple-escape-sequence-char
*/
inline constexpr std::array<std::string_view, 256>
c_simple_esc_seq_hex{
    R"(\x00)",
    R"(\x01)",
    R"(\x02)",
    R"(\x03)",
    R"(\x04)",
    R"(\x05)",
    R"(\x06)",
    R"(\a)"  ,
    R"(\b)"  ,
    R"(\t)"  ,
    R"(\n)"  ,
    R"(\v)"  ,
    R"(\f)"  ,
    R"(\r)"  ,
    R"(\x0E)",
    R"(\x0F)",
    R"(\x10)",
    R"(\x11)",
    R"(\x12)",
    R"(\x13)",
    R"(\x14)",
    R"(\x15)",
    R"(\x16)",
    R"(\x17)",
    R"(\x18)",
    R"(\x19)",
    R"(\x1A)",
    R"(\x1B)",
    R"(\x1C)",
    R"(\x1D)",
    R"(\x1E)",
    R"(\x1F)",
    R"( )"   ,
    R"(!)"   ,
    R"(\")"  ,
    R"(#)"   ,
    R"($)"   ,
    R"(%)"   ,
    R"(&)"   ,
    R"(\')"  ,
    R"(()"   ,
    R"())"   ,
    R"(*)"   ,
    R"(+)"   ,
    R"(,)"   ,
    R"(-)"   ,
    R"(.)"   ,
    R"(/)"   ,
    R"(0)"   ,
    R"(1)"   ,
    R"(2)"   ,
    R"(3)"   ,
    R"(4)"   ,
    R"(5)"   ,
    R"(6)"   ,
    R"(7)"   ,
    R"(8)"   ,
    R"(9)"   ,
    R"(:)"   ,
    R"(;)"   ,
    R"(<)"   ,
    R"(=)"   ,
    R"(>)"   ,
    R"(?)"   ,
    R"(@)"   ,
    R"(A)"   ,
    R"(B)"   ,
    R"(C)"   ,
    R"(D)"   ,
    R"(E)"   ,
    R"(F)"   ,
    R"(G)"   ,
    R"(H)"   ,
    R"(I)"   ,
    R"(J)"   ,
    R"(K)"   ,
    R"(L)"   ,
    R"(M)"   ,
    R"(N)"   ,
    R"(O)"   ,
    R"(P)"   ,
    R"(Q)"   ,
    R"(R)"   ,
    R"(S)"   ,
    R"(T)"   ,
    R"(U)"   ,
    R"(V)"   ,
    R"(W)"   ,
    R"(X)"   ,
    R"(Y)"   ,
    R"(Z)"   ,
    R"([)"   ,
    R"(\\)"  ,
    R"(])"   ,
    R"(^)"   ,
    R"(_)"   ,
    R"(`)"   ,
    R"(a)"   ,
    R"(b)"   ,
    R"(c)"   ,
    R"(d)"   ,
    R"(e)"   ,
    R"(f)"   ,
    R"(g)"   ,
    R"(h)"   ,
    R"(i)"   ,
    R"(j)"   ,
    R"(k)"   ,
    R"(l)"   ,
    R"(m)"   ,
    R"(n)"   ,
    R"(o)"   ,
    R"(p)"   ,
    R"(q)"   ,
    R"(r)"   ,
    R"(s)"   ,
    R"(t)"   ,
    R"(u)"   ,
    R"(v)"   ,
    R"(w)"   ,
    R"(x)"   ,
    R"(y)"   ,
    R"(z)"   ,
    R"({)"   ,
    R"(|)"   ,
    R"(})"   ,
    R"(~)"   ,
    R"(\x7F)",
    R"(\x80)",
    R"(\x81)",
    R"(\x82)",
    R"(\x83)",
    R"(\x84)",
    R"(\x85)",
    R"(\x86)",
    R"(\x87)",
    R"(\x88)",
    R"(\x89)",
    R"(\x8A)",
    R"(\x8B)",
    R"(\x8C)",
    R"(\x8D)",
    R"(\x8E)",
    R"(\x8F)",
    R"(\x90)",
    R"(\x91)",
    R"(\x92)",
    R"(\x93)",
    R"(\x94)",
    R"(\x95)",
    R"(\x96)",
    R"(\x97)",
    R"(\x98)",
    R"(\x99)",
    R"(\x9A)",
    R"(\x9B)",
    R"(\x9C)",
    R"(\x9D)",
    R"(\x9E)",
    R"(\x9F)",
    R"(\xA0)",
    R"(\xA1)",
    R"(\xA2)",
    R"(\xA3)",
    R"(\xA4)",
    R"(\xA5)",
    R"(\xA6)",
    R"(\xA7)",
    R"(\xA8)",
    R"(\xA9)",
    R"(\xAA)",
    R"(\xAB)",
    R"(\xAC)",
    R"(\xAD)",
    R"(\xAE)",
    R"(\xAF)",
    R"(\xB0)",
    R"(\xB1)",
    R"(\xB2)",
    R"(\xB3)",
    R"(\xB4)",
    R"(\xB5)",
    R"(\xB6)",
    R"(\xB7)",
    R"(\xB8)",
    R"(\xB9)",
    R"(\xBA)",
    R"(\xBB)",
    R"(\xBC)",
    R"(\xBD)",
    R"(\xBE)",
    R"(\xBF)",
    R"(\xC0)",
    R"(\xC1)",
    R"(\xC2)",
    R"(\xC3)",
    R"(\xC4)",
    R"(\xC5)",
    R"(\xC6)",
    R"(\xC7)",
    R"(\xC8)",
    R"(\xC9)",
    R"(\xCA)",
    R"(\xCB)",
    R"(\xCC)",
    R"(\xCD)",
    R"(\xCE)",
    R"(\xCF)",
    R"(\xD0)",
    R"(\xD1)",
    R"(\xD2)",
    R"(\xD3)",
    R"(\xD4)",
    R"(\xD5)",
    R"(\xD6)",
    R"(\xD7)",
    R"(\xD8)",
    R"(\xD9)",
    R"(\xDA)",
    R"(\xDB)",
    R"(\xDC)",
    R"(\xDD)",
    R"(\xDE)",
    R"(\xDF)",
    R"(\xE0)",
    R"(\xE1)",
    R"(\xE2)",
    R"(\xE3)",
    R"(\xE4)",
    R"(\xE5)",
    R"(\xE6)",
    R"(\xE7)",
    R"(\xE8)",
    R"(\xE9)",
    R"(\xEA)",
    R"(\xEB)",
    R"(\xEC)",
    R"(\xED)",
    R"(\xEE)",
    R"(\xEF)",
    R"(\xF0)",
    R"(\xF1)",
    R"(\xF2)",
    R"(\xF3)",
    R"(\xF4)",
    R"(\xF5)",
    R"(\xF6)",
    R"(\xF7)",
    R"(\xF8)",
    R"(\xF9)",
    R"(\xFA)",
    R"(\xFB)",
    R"(\xFC)",
    R"(\xFD)",
    R"(\xFE)",
    R"(\xFF)",
};
