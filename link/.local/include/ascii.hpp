// SPDX-FileCopyrightText: Steven Ward
// SPDX-License-Identifier: OSL-3.0

/// ascii strings
/**
\file
\author Steven Ward
\sa https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap07.html#tag_07_03_01
\sa https://en.cppreference.com/w/cpp/string/byte
\sa https://docs.python.org/3/library/string.html
*/

// Generated by "generate-ascii.py" on 2022-11-07T16:57:37+00:00
// system information: Linux-6.0.7-arch1-1-x86_64-with-glibc2.36

#pragma once

#include <array>
#include <string_view>

inline constexpr std::string_view ascii_all              {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 128};
inline constexpr std::string_view ascii_uppercase        {"ABCDEFGHIJKLMNOPQRSTUVWXYZ", 26};
inline constexpr std::string_view ascii_lowercase        {"abcdefghijklmnopqrstuvwxyz", 26};
inline constexpr std::string_view ascii_alphabetical     {"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", 52};
inline constexpr std::string_view ascii_decimal          {"0123456789", 10};
inline constexpr std::string_view ascii_alphanumeric     {"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", 62};
inline constexpr std::string_view ascii_word             {"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz", 63};
inline constexpr std::string_view ascii_hexadecimal      {"0123456789ABCDEFabcdef", 22};
inline constexpr std::string_view ascii_octal            {"01234567", 8};
inline constexpr std::string_view ascii_binary           {"01", 2};
inline constexpr std::string_view ascii_whitespace       {"\t\n\v\f\r ", 6};
inline constexpr std::string_view ascii_blank            {"\t ", 2};
inline constexpr std::string_view ascii_visible          {"!\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 94};
inline constexpr std::string_view ascii_printable        {" !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 95};
inline constexpr std::string_view ascii_control          {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F\x7F", 33};
inline constexpr std::string_view ascii_punctuation      {"!\"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~", 32};
inline constexpr std::string_view ascii_non_uppercase    {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./0123456789:;<=>?@[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 102};
inline constexpr std::string_view ascii_non_lowercase    {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`{|}~\x7F", 102};
inline constexpr std::string_view ascii_non_alphabetical {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./0123456789:;<=>?@[\\]^_`{|}~\x7F", 76};
inline constexpr std::string_view ascii_non_decimal      {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 118};
inline constexpr std::string_view ascii_non_alphanumeric {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~\x7F", 66};
inline constexpr std::string_view ascii_non_word         {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./:;<=>?@[\\]^`{|}~\x7F", 65};
inline constexpr std::string_view ascii_non_hexadecimal  {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~\x7F", 106};
inline constexpr std::string_view ascii_non_octal        {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./89:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 120};
inline constexpr std::string_view ascii_non_binary       {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\"#$%&\'()*+,-./23456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 126};
inline constexpr std::string_view ascii_non_whitespace   {"\x00\x01\x02\x03\x04\x05\x06\a\b\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F!\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 122};
inline constexpr std::string_view ascii_non_blank        {"\x00\x01\x02\x03\x04\x05\x06\a\b\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F!\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7F", 126};
inline constexpr std::string_view ascii_non_visible      {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F \x7F", 34};
inline constexpr std::string_view ascii_non_printable    {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F\x7F", 33};
inline constexpr std::string_view ascii_non_control      {" !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 95};
inline constexpr std::string_view ascii_non_punctuation  {"\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\x7F", 96};

/**
\sa https://en.cppreference.com/w/c/language/escape
\sa https://en.cppreference.com/w/cpp/language/escape
\sa https://eel.is/c++draft/lex.ccon#:simple-escape-sequence-char
*/
inline constexpr std::array<std::string_view, 128>
c_simple_esc_seq_hex{
	R"(\x00)", //   0
	R"(\x01)", //   1
	R"(\x02)", //   2
	R"(\x03)", //   3
	R"(\x04)", //   4
	R"(\x05)", //   5
	R"(\x06)", //   6
	R"(\a)"  , //   7
	R"(\b)"  , //   8
	R"(\t)"  , //   9
	R"(\n)"  , //  10
	R"(\v)"  , //  11
	R"(\f)"  , //  12
	R"(\r)"  , //  13
	R"(\x0E)", //  14
	R"(\x0F)", //  15
	R"(\x10)", //  16
	R"(\x11)", //  17
	R"(\x12)", //  18
	R"(\x13)", //  19
	R"(\x14)", //  20
	R"(\x15)", //  21
	R"(\x16)", //  22
	R"(\x17)", //  23
	R"(\x18)", //  24
	R"(\x19)", //  25
	R"(\x1A)", //  26
	R"(\x1B)", //  27
	R"(\x1C)", //  28
	R"(\x1D)", //  29
	R"(\x1E)", //  30
	R"(\x1F)", //  31
	R"( )"   , //  32
	R"(!)"   , //  33
	R"(\")"  , //  34
	R"(#)"   , //  35
	R"($)"   , //  36
	R"(%)"   , //  37
	R"(&)"   , //  38
	R"(\')"  , //  39
	R"(()"   , //  40
	R"())"   , //  41
	R"(*)"   , //  42
	R"(+)"   , //  43
	R"(,)"   , //  44
	R"(-)"   , //  45
	R"(.)"   , //  46
	R"(/)"   , //  47
	R"(0)"   , //  48
	R"(1)"   , //  49
	R"(2)"   , //  50
	R"(3)"   , //  51
	R"(4)"   , //  52
	R"(5)"   , //  53
	R"(6)"   , //  54
	R"(7)"   , //  55
	R"(8)"   , //  56
	R"(9)"   , //  57
	R"(:)"   , //  58
	R"(;)"   , //  59
	R"(<)"   , //  60
	R"(=)"   , //  61
	R"(>)"   , //  62
	R"(?)"   , //  63
	R"(@)"   , //  64
	R"(A)"   , //  65
	R"(B)"   , //  66
	R"(C)"   , //  67
	R"(D)"   , //  68
	R"(E)"   , //  69
	R"(F)"   , //  70
	R"(G)"   , //  71
	R"(H)"   , //  72
	R"(I)"   , //  73
	R"(J)"   , //  74
	R"(K)"   , //  75
	R"(L)"   , //  76
	R"(M)"   , //  77
	R"(N)"   , //  78
	R"(O)"   , //  79
	R"(P)"   , //  80
	R"(Q)"   , //  81
	R"(R)"   , //  82
	R"(S)"   , //  83
	R"(T)"   , //  84
	R"(U)"   , //  85
	R"(V)"   , //  86
	R"(W)"   , //  87
	R"(X)"   , //  88
	R"(Y)"   , //  89
	R"(Z)"   , //  90
	R"([)"   , //  91
	R"(\\)"  , //  92
	R"(])"   , //  93
	R"(^)"   , //  94
	R"(_)"   , //  95
	R"(`)"   , //  96
	R"(a)"   , //  97
	R"(b)"   , //  98
	R"(c)"   , //  99
	R"(d)"   , // 100
	R"(e)"   , // 101
	R"(f)"   , // 102
	R"(g)"   , // 103
	R"(h)"   , // 104
	R"(i)"   , // 105
	R"(j)"   , // 106
	R"(k)"   , // 107
	R"(l)"   , // 108
	R"(m)"   , // 109
	R"(n)"   , // 110
	R"(o)"   , // 111
	R"(p)"   , // 112
	R"(q)"   , // 113
	R"(r)"   , // 114
	R"(s)"   , // 115
	R"(t)"   , // 116
	R"(u)"   , // 117
	R"(v)"   , // 118
	R"(w)"   , // 119
	R"(x)"   , // 120
	R"(y)"   , // 121
	R"(z)"   , // 122
	R"({)"   , // 123
	R"(|)"   , // 124
	R"(})"   , // 125
	R"(~)"   , // 126
	R"(\x7F)", // 127
};
